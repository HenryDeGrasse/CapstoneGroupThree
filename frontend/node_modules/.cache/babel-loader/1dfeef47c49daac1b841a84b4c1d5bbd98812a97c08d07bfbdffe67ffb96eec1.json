{"ast":null,"code":"var _jsxFileName = \"/Users/kanachiweli/Capstone Website/frontend/src/Components/ControlButton.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dynamicStyles = isIconOn => {\n  return {\n    backgroundColor: isIconOn ? 'green' : 'red',\n    color: isIconOn ? 'white' : 'black'\n  };\n};\nconst ControlButton = ({\n  iconTitle,\n  iconLink\n}) => {\n  _s();\n  const [isIconOn, setIsIconOn] = useState(false);\n  const buttonStyles = dynamicStyles(isIconOn);\n  const handleToggle = () => {\n    setIsIconOn(!isIconOn);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleToggle,\n      style: buttonStyles,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: iconLink,\n        alt: `${iconTitle} icon`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 7\n  }, this);\n};\n_s(ControlButton, \"ow9mt+bEk7SPPf8dByMHsW5vT5c=\");\n_c = ControlButton;\nexport default ControlButton;\nvar _c;\n$RefreshReg$(_c, \"ControlButton\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","dynamicStyles","isIconOn","backgroundColor","color","ControlButton","iconTitle","iconLink","_s","setIsIconOn","buttonStyles","handleToggle","children","onClick","style","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kanachiweli/Capstone Website/frontend/src/Components/ControlButton.tsx"],"sourcesContent":["import React, { useState } from 'react';\ntype ControlButtonsProps = {\n   iconLink: string \n   iconTitle: string \n};\nconst dynamicStyles = (isIconOn: boolean) => {\n    return {\n      backgroundColor: isIconOn ? 'green' : 'red',\n      color: isIconOn ? 'white' : 'black',\n    };\n};\n\nconst ControlButton : React.FC<ControlButtonsProps> = ({iconTitle, iconLink }) => {\n    const [isIconOn, setIsIconOn] = useState(false);\n    const buttonStyles = dynamicStyles(isIconOn);\n   \n\n    const handleToggle = () => {\n      setIsIconOn(!isIconOn);\n    };\n  \n    return (\n      <div>\n        <button onClick={handleToggle} style={buttonStyles} > \n        <img src={iconLink} alt={`${iconTitle} icon`} />\n        </button>\n      </div>\n    );\n  };\n  \n\nexport default ControlButton"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAKxC,MAAMC,aAAa,GAAIC,QAAiB,IAAK;EACzC,OAAO;IACLC,eAAe,EAAED,QAAQ,GAAG,OAAO,GAAG,KAAK;IAC3CE,KAAK,EAAEF,QAAQ,GAAG,OAAO,GAAG;EAC9B,CAAC;AACL,CAAC;AAED,MAAMG,aAA6C,GAAGA,CAAC;EAACC,SAAS;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC9E,MAAM,CAACN,QAAQ,EAAEO,WAAW,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAMY,YAAY,GAAGT,aAAa,CAACC,QAAQ,CAAC;EAG5C,MAAMS,YAAY,GAAGA,CAAA,KAAM;IACzBF,WAAW,CAAC,CAACP,QAAQ,CAAC;EACxB,CAAC;EAED,oBACEF,OAAA;IAAAY,QAAA,eACEZ,OAAA;MAAQa,OAAO,EAAEF,YAAa;MAACG,KAAK,EAAEJ,YAAa;MAAAE,QAAA,eACnDZ,OAAA;QAAKe,GAAG,EAAER,QAAS;QAACS,GAAG,EAAG,GAAEV,SAAU;MAAO;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACZ,EAAA,CAhBEH,aAA6C;AAAAgB,EAAA,GAA7ChB,aAA6C;AAmBnD,eAAeA,aAAa;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}