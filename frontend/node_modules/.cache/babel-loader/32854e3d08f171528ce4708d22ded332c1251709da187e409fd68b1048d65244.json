{"ast":null,"code":"var _jsxFileName = \"/Users/kanachiweli/Capstone Website/frontend/src/Components/ControlButton.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToggleIcon = () => {\n  _s();\n  const [isIconOn, setIsIconOn] = useState(false);\n  const handleToggle = () => {\n    setIsIconOn(!isIconOn);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleToggle,\n      children: isIconOn ? 'Hide Icon' : 'Show Icon'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this), isIconVisible && /*#__PURE__*/_jsxDEV(YourIconComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 7\n  }, this);\n};\n\n//   const YourIconComponent = () => (\n//     // Replace this with your actual icon component or JSX\n//     <div>Icon</div>\n//   );\n_s(ToggleIcon, \"ow9mt+bEk7SPPf8dByMHsW5vT5c=\");\n_c = ToggleIcon;\nconst ControlButton = ({\n  iconTitle,\n  iconLink\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_c2 = ControlButton;\nexport default ControlButton;\nvar _c, _c2;\n$RefreshReg$(_c, \"ToggleIcon\");\n$RefreshReg$(_c2, \"ControlButton\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ToggleIcon","_s","isIconOn","setIsIconOn","handleToggle","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","isIconVisible","YourIconComponent","_c","ControlButton","iconTitle","iconLink","_c2","$RefreshReg$"],"sources":["/Users/kanachiweli/Capstone Website/frontend/src/Components/ControlButton.tsx"],"sourcesContent":["import React, { useState } from 'react';\ntype ControlButtonsProps = {\n   iconLink: string \n   iconTitle: string \n};\n\nconst ToggleIcon = () => {\n    const [isIconOn, setIsIconOn] = useState(false);\n  \n    const handleToggle = () => {\n      setIsIconOn(!isIconOn);\n    };\n  \n    return (\n      <div>\n        <button onClick={handleToggle}>\n          {isIconOn ? 'Hide Icon' : 'Show Icon'}\n        </button>\n        {isIconVisible && <YourIconComponent />}\n      </div>\n    );\n  };\n  \n//   const YourIconComponent = () => (\n//     // Replace this with your actual icon component or JSX\n//     <div>Icon</div>\n//   );\nconst ControlButton: React.FC<ControlButtonsProps> = ({iconTitle, iconLink }) => {\n    return(\n        <button>\n\n        </button>\n    )\n}\nexport default ControlButton"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMxC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAMO,YAAY,GAAGA,CAAA,KAAM;IACzBD,WAAW,CAAC,CAACD,QAAQ,CAAC;EACxB,CAAC;EAED,oBACEH,OAAA;IAAAM,QAAA,gBACEN,OAAA;MAAQO,OAAO,EAAEF,YAAa;MAAAC,QAAA,EAC3BH,QAAQ,GAAG,WAAW,GAAG;IAAW;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,EACRC,aAAa,iBAAIZ,OAAA,CAACa,iBAAiB;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpC,CAAC;AAEV,CAAC;;AAEH;AACA;AACA;AACA;AAAAT,EAAA,CApBMD,UAAU;AAAAa,EAAA,GAAVb,UAAU;AAqBhB,MAAMc,aAA4C,GAAGA,CAAC;EAACC,SAAS;EAAEC;AAAS,CAAC,KAAK;EAC7E,oBACIjB,OAAA;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEQ,CAAC;AAEjB,CAAC;AAAAO,GAAA,GANKH,aAA4C;AAOlD,eAAeA,aAAa;AAAA,IAAAD,EAAA,EAAAI,GAAA;AAAAC,YAAA,CAAAL,EAAA;AAAAK,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}