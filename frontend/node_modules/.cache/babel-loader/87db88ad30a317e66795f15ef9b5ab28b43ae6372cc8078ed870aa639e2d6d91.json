{"ast":null,"code":"var _jsxFileName = \"/Users/kanachiweli/Capstone Website/frontend/src/Components/Dial.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dail = ({\n  currentTemp,\n  setTemp\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Ellipse, {\n      currentTemp: currentTemp,\n      fill: \"#122701\",\n      radius: 250 / (2 * Math.PI)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n_c = Dail;\nconst Arch = ({\n  radius,\n  strokeWidth,\n  strokeColor,\n  startAngle,\n  endAngle\n}) => {\n  // Calculate the start and end points of the arc\n  const startX = radius + radius * Math.cos(startAngle * Math.PI / 180);\n  const startY = radius + radius * Math.sin(startAngle * Math.PI / 180);\n  const endX = radius + radius * Math.cos(endAngle * Math.PI / 180);\n  const endY = radius + radius * Math.sin(endAngle * Math.PI / 180);\n\n  // Create the path data for the arc\n  const pathData = `M ${startX} ${startY} A ${radius} ${radius} 0 0 1 ${endX} ${endY}`;\n  return /*#__PURE__*/_jsxDEV(\"path\", {\n    d: pathData,\n    fill: \"none\",\n    stroke: strokeColor,\n    strokeWidth: strokeWidth,\n    \"stroke-linecap\": \"round\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 7\n  }, this);\n};\n_c2 = Arch;\nconst Ellipse = ({\n  currentTemp,\n  radius,\n  fill\n}) => {\n  const circumference = currentTemp / 100 * 360;\n  const semiMajorAxis = circumference / (2 * Math.PI);\n  const strokeWidth = 5;\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: radius * 2 * Math.PI,\n    height: radius * 2 * Math.PI,\n    viewBox: `0 0 ${radius * 2} ${radius * 2}`,\n    fill: \"none\",\n    children: [/*#__PURE__*/_jsxDEV(\"g\", {\n      filter: `url(#filter0_d_${radius}_${circumference}_layer1)`,\n      children: [/*#__PURE__*/_jsxDEV(\"ellipse\", {\n        cx: radius,\n        cy: radius,\n        rx: radius - 6,\n        ry: radius - 6,\n        fill: \"none\",\n        stroke: \"#1111\",\n        strokeWidth: 5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Arch, {\n        radius: radius,\n        startAngle: 90,\n        endAngle: circumference,\n        strokeColor: fill,\n        strokeWidth: 5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ellipse\", {\n      cx: \"204.618\",\n      cy: \"218.581\",\n      rx: \"1.376\",\n      ry: \"1.374\",\n      fill: \"#315B0F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"defs\", {\n      children: /*#__PURE__*/_jsxDEV(\"filter\", {\n        id: `filter0_d_${radius}_${circumference}`,\n        x: \"0.5\",\n        y: \"0\",\n        width: radius * 2,\n        height: radius * 2,\n        filterUnits: \"userSpaceOnUse\",\n        \"color-interpolation-filters\": \"sRGB\",\n        children: [/*#__PURE__*/_jsxDEV(\"feFlood\", {\n          \"flood-opacity\": \"0\",\n          result: \"BackgroundImageFix\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"feColorMatrix\", {\n          in: \"SourceAlpha\",\n          type: \"matrix\",\n          values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\",\n          result: \"hardAlpha\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"feOffset\", {\n          dy: \"4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"feGaussianBlur\", {\n          stdDeviation: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"feComposite\", {\n          in2: \"hardAlpha\",\n          operator: \"out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"feColorMatrix\", {\n          type: \"matrix\",\n          values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"feBlend\", {\n          mode: \"normal\",\n          in2: \"BackgroundImageFix\",\n          result: \"effect1_dropShadow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"feBlend\", {\n          mode: \"normal\",\n          in: \"SourceGraphic\",\n          in2: \"effect1_dropShadow\",\n          result: \"shape\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_c3 = Ellipse;\nexport default Dail;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Dail\");\n$RefreshReg$(_c2, \"Arch\");\n$RefreshReg$(_c3, \"Ellipse\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Dail","currentTemp","setTemp","children","Ellipse","fill","radius","Math","PI","fileName","_jsxFileName","lineNumber","columnNumber","_c","Arch","strokeWidth","strokeColor","startAngle","endAngle","startX","cos","startY","sin","endX","endY","pathData","d","stroke","_c2","circumference","semiMajorAxis","xmlns","width","height","viewBox","filter","cx","cy","rx","ry","id","x","y","filterUnits","result","in","type","values","dy","stdDeviation","in2","operator","mode","_c3","$RefreshReg$"],"sources":["/Users/kanachiweli/Capstone Website/frontend/src/Components/Dial.tsx"],"sourcesContent":["import React, {FC} from 'react';\n\n\ntype DailProps = {\n    currentTemp: number\n    setTemp: number\n};\n\nconst Dail: React.FC<DailProps> = ({ currentTemp, setTemp }) => {\n    return (\n        <div>\n            <Ellipse currentTemp={currentTemp} fill='#122701' radius={250/(2*Math.PI)} /> \n\n        </div>\n    );\n};\ninterface EllipseProps {\n    currentTemp: number\n    fill: string;\n    radius:number\n  }\n  interface ArchProps {\n    radius:number;\n    strokeWidth: number;\n    strokeColor: string\n    startAngle: number\n    endAngle:number\n  }\n\nconst Arch: FC<ArchProps>  = ({ radius, strokeWidth, strokeColor, startAngle, endAngle }) => {\n    // Calculate the start and end points of the arc\n    const startX = radius + radius * Math.cos((startAngle * Math.PI) / 180);\n    const startY = radius + radius * Math.sin((startAngle * Math.PI) / 180);\n    const endX = radius + radius * Math.cos((endAngle * Math.PI) / 180);\n    const endY = radius + radius * Math.sin((endAngle * Math.PI) / 180);\n  \n    // Create the path data for the arc\n    const pathData = `M ${startX} ${startY} A ${radius} ${radius} 0 0 1 ${endX} ${endY}`;\n  \n    return (\n      <path d={pathData} fill=\"none\" stroke={strokeColor} strokeWidth={strokeWidth} stroke-linecap=\"round\"/>\n    );\n  };\n\nconst Ellipse: FC<EllipseProps> = ({currentTemp, radius, fill }) => {\n    const circumference= currentTemp/100*360\n    const semiMajorAxis = circumference / (2 * Math.PI);\n    const strokeWidth = 5\n\n   \n\n    return (\n    \n    <svg xmlns=\"http://www.w3.org/2000/svg\" width={radius*2*Math.PI} height={radius*2*Math.PI} viewBox={`0 0 ${radius * 2} ${radius * 2}`} fill=\"none\">\n      {/* Group with filter */}\n      <g filter={`url(#filter0_d_${radius}_${circumference}_layer1)`}>\n         {/* Ellipse for the first shape in Layer 1 */}\n          <ellipse cx={radius} cy={radius} rx={radius - 6} ry={radius - 6} fill=\"none\" stroke=\"#1111\" strokeWidth={5} />\n          <Arch radius={radius} startAngle={90} endAngle={circumference} strokeColor={fill} strokeWidth={5}/>\n\n          </g>\n   \n      {/* Ellipse for the third shape */}\n      <ellipse cx=\"204.618\" cy=\"218.581\" rx=\"1.376\" ry=\"1.374\" fill=\"#315B0F\"  />\n      {/* Ellipse for additional points */}\n      {/* Add more ellipse elements for the remaining points in the path */}\n      \n      {/* Definitions */}\n      <defs>\n        {/* Define your filters or other definitions here if needed */}\n        <filter id={`filter0_d_${radius}_${circumference}`} x=\"0.5\" y=\"0\" width={radius * 2} height={radius * 2} filterUnits=\"userSpaceOnUse\" color-interpolation-filters=\"sRGB\">\n          <feFlood flood-opacity=\"0\" result=\"BackgroundImageFix\"/>\n          <feColorMatrix in=\"SourceAlpha\" type=\"matrix\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\" result=\"hardAlpha\"/>\n          <feOffset dy=\"4\"/>\n          <feGaussianBlur stdDeviation=\"2\"/>\n          <feComposite in2=\"hardAlpha\" operator=\"out\"/>\n          <feColorMatrix type=\"matrix\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0\"/>\n          <feBlend mode=\"normal\" in2=\"BackgroundImageFix\" result=\"effect1_dropShadow\"/>\n          <feBlend mode=\"normal\" in=\"SourceGraphic\" in2=\"effect1_dropShadow\" result=\"shape\"/>\n        </filter>\n      </defs>\n    </svg>\n\n    )\n  };\n\n  \n  \nexport default Dail"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}