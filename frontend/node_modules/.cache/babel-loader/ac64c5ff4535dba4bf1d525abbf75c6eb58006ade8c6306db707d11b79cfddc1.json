{"ast":null,"code":"var _jsxFileName = \"/Users/kanachiweli/Capstone Website/frontend/src/Components/Dial.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dail = ({\n  currentTemp,\n  setTemp\n}) => {\n  _s();\n  // State to hold the current count\n  const [count, setCount] = useState(setTemp);\n\n  // Function to handle button click and update count\n  const increaseTemp = () => {\n    setCount(count + 1);\n  };\n  const decreaseTemp = () => {\n    setCount(count - 1);\n  };\n  const ChangeTempButton = ({\n    isIncrease,\n    onClick\n  }) => {\n    const textStyles = {\n      margin: 0,\n      color: 'rgb(49, 91, 15)'\n    };\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClick,\n      style: {\n        width: '4.7vh',\n        height: '4.7vh',\n        borderRadius: '50%',\n        border: 'none',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: 'rgb(49, 91, 15)'\n      },\n      children: isIncrease ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: textStyles,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: textStyles,\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      paddingBottom: '30px',\n      display: 'flex',\n      flexDirection: 'row'\n    },\n    children: [/*#__PURE__*/_jsxDEV(ChangeTempButton, {\n      isIncrease: true,\n      onClick: increaseTemp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Ellipse, {\n      currentTemp: currentTemp,\n      fill: \"#315B0F\",\n      setTemp: count,\n      radius: 250 / (2 * Math.PI),\n      strokeWidth: 5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(ChangeTempButton, {\n      isIncrease: false,\n      onClick: decreaseTemp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(Dail, \"sysGrwe0RCNhzcqrB17HJ8FQv4o=\");\n_c = Dail;\nconst Arch = ({\n  radius,\n  strokeWidth,\n  strokeColor,\n  startAngle,\n  endAngle\n}) => {\n  const startX = radius * Math.cos(startAngle * Math.PI / 180);\n  const startY = radius * Math.sin(startAngle * Math.PI / 180);\n  const endX = radius * Math.cos(endAngle * Math.PI / 180);\n  const endY = radius * Math.sin(endAngle * Math.PI / 180);\n  // Create the path data for the full circle\n  const pathData = `M ${startX} ${startY} A ${radius} ${radius} 0 1 1 ${endX} ${endY}`;\n  return /*#__PURE__*/_jsxDEV(\"path\", {\n    d: pathData,\n    fill: \"none\",\n    stroke: strokeColor,\n    strokeWidth: strokeWidth,\n    strokeLinecap: \"round\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 10\n  }, this);\n};\n_c2 = Arch;\nconst Ellipse = ({\n  currentTemp,\n  radius,\n  fill,\n  strokeWidth,\n  setTemp\n}) => {\n  const circumferenceCurr = (currentTemp + 10) / 100 * 360;\n  const circumferenceSet = (setTemp + 10) / 100 * 360;\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: radius * 2 * Math.PI,\n    height: radius * 2 * Math.PI,\n    viewBox: `0 0 ${radius * 2} ${radius * 2}`,\n    fill: \"none\",\n    children: [/*#__PURE__*/_jsxDEV(\"g\", {\n      transform: `translate(${radius}, ${radius})`,\n      filter: `url(#filter0_d_${radius}_${circumferenceCurr}_layer1)`,\n      children: [/*#__PURE__*/_jsxDEV(Arch, {\n        radius: radius - (strokeWidth + 1),\n        startAngle: 0,\n        endAngle: 360,\n        strokeColor: '#F4FFEB',\n        strokeWidth: strokeWidth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Arch, {\n        radius: radius - strokeWidth - (strokeWidth + 1),\n        startAngle: 0,\n        endAngle: 360,\n        strokeColor: '#F4FFEB',\n        strokeWidth: strokeWidth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Arch, {\n        radius: radius - (strokeWidth + 1),\n        startAngle: 45,\n        endAngle: circumferenceCurr + 44,\n        strokeColor: fill,\n        strokeWidth: strokeWidth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Arch, {\n        radius: radius - strokeWidth - (strokeWidth + 1),\n        startAngle: 45,\n        endAngle: circumferenceSet + 44,\n        strokeColor: '#66B12A',\n        strokeWidth: strokeWidth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        x: -radius * 1 / 2,\n        y: radius * 1 / 12,\n        fontSize: \"16\",\n        fill: \"#122701\",\n        children: `${currentTemp} °F`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        x: -radius * 1 / 3,\n        y: radius * 4 / 12,\n        fontSize: \"4\",\n        fill: \"#122701\",\n        children: `Set To: ${setTemp}°F `\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"defs\", {\n      children: /*#__PURE__*/_jsxDEV(\"filter\", {\n        id: \"filter0_d_104_67\",\n        x: \"0.5\",\n        y: \"0\",\n        width: \"258\",\n        height: \"258\",\n        filterUnits: \"userSpaceOnUse\",\n        \"color-interpolation-filters\": \"sRGB\",\n        children: [/*#__PURE__*/_jsxDEV(\"feFlood\", {\n          \"flood-opacity\": \"0\",\n          result: \"BackgroundImageFix\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"feColorMatrix\", {\n          in: \"SourceAlpha\",\n          type: \"matrix\",\n          values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\",\n          result: \"hardAlpha\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"feOffset\", {\n          dy: \"4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"feGaussianBlur\", {\n          stdDeviation: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"feComposite\", {\n          in2: \"hardAlpha\",\n          operator: \"out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"feColorMatrix\", {\n          type: \"matrix\",\n          values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"feBlend\", {\n          mode: \"normal\",\n          in2: \"BackgroundImageFix\",\n          result: \"effect1_dropShadow_104_67\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"feBlend\", {\n          mode: \"normal\",\n          in: \"SourceGraphic\",\n          in2: \"effect1_dropShadow_104_67\",\n          result: \"shape\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_c3 = Ellipse;\nexport default Dail;\n// const Ellipse: FC<EllipseProps> = ({ currentTemp, radius, fill, strokeWidth, setTemp }) => {\n//   const circumference = ((currentTemp+10) / 100) * 360;\n\n//   return (\n//     <svg xmlns=\"http://www.w3.org/2000/svg\" width={radius * 2 * Math.PI} height={radius * 2 * Math.PI} viewBox={`0 0 ${radius * 2} ${radius * 2}`} fill=\"none\">\n//       {/* Group with filter */}\n//       <g transform={`translate(${radius}, ${radius})`} filter={`url(#filter0_d_${radius}_${circumference}_layer1)`}>\n//         {/* Ellipse for the first shape in Layer 1 */}\n//         <Arch radius={radius - (strokeWidth+1)} startAngle={0} endAngle={360} strokeColor={'#F4FFEB'} strokeWidth={strokeWidth} />\n//         <Arch radius={radius - (strokeWidth+1)} startAngle={45} endAngle={circumference+44 } strokeColor={fill} strokeWidth={strokeWidth} />\n//         <text x={-radius * 1 / 2} y={radius * 1 / 12} fontSize=\"16\" fill=\"#122701\">\n//           {`${currentTemp} °F`}\n//         </text>\n//         <text x={-radius * 1 / 3} y={radius * 4 / 12} fontSize=\"4\" fill=\"#122701\">\n//           {`Set To: ${setTemp}°F `}\n//         </text>\n//       </g>\n//       {/* Definitions */}\n//       <defs>\n\n//   </defs>\n//     </svg>\n//   );\n// };\n\n// const Ellipse: FC<EllipseProps> = ({ currentTemp, radius, fill, strokeWidth, setTemp }) => {\n//     const [rotation, setRotation] = useState(315);\n\n//     const handleRotation = (event: React.MouseEvent<SVGSVGElement>) => {\n//         // Calculate the angle of rotation based on user interaction\n//         const boundingBox = event.currentTarget.getBoundingClientRect();\n//         const centerX = boundingBox.width / 2;\n//         const centerY = boundingBox.height / 2;\n//         let angle = Math.atan2(event.clientY - centerY, event.clientX - centerX) * (180 / Math.PI);\n\n//         // Update the rotation state\n//         setRotation(angle);\n//         console.log(rotation);\n//       };\n//     const circumference = rotation;\n\n//     return (\n//       <svg\n//         xmlns=\"http://www.w3.org/2000/svg\"\n//         width={radius * 2 * Math.PI}\n//         height={radius * 2 * Math.PI}\n//         viewBox={`0 0 ${radius * 2} ${radius * 2}`}\n//         fill=\"none\"\n//         onMouseMove={handleRotation}\n\n//       >\n//         {/* Group with filter and rotation */}\n//         <g\n//           transform={`translate(${radius}, ${radius})`}\n//           filter={`url(#filter0_d_${radius}_360_layer1)`}\n//         >\n//           {/* Ellipse for the first shape in Layer 1 */}\n//           <Arch radius={radius - (strokeWidth + 1)} startAngle={0} endAngle={360} strokeColor={'#F4FFEB'} strokeWidth={strokeWidth} />\n//           <Arch\n//             radius={radius - (strokeWidth + 1)}\n//             startAngle={45}\n//             endAngle={circumference + 44}\n//             strokeColor={fill}\n//             strokeWidth={strokeWidth}\n//           />\n//           <text x={-radius * 1 / 2} y={radius * 1 / 12} fontSize=\"16\" fill=\"#122701\">\n//             {`${Math.round(((circumference-45)/360)*100 )} °F`}\n//           </text>\n//           <text x={-radius * 1 / 3} y={radius * 4 / 12} fontSize=\"4\" fill=\"#122701\">\n//             {`Set To: ${setTemp}°F `}\n//           </text>\n//         </g>\n//         {/* Definitions */}\n//         <defs>\n//         <filter id=\"filter0_d_104_67\" x=\"0.5\" y=\"0\" width=\"258\" height=\"258\" filterUnits=\"userSpaceOnUse\" color-interpolation-filters=\"sRGB\">\n//       <feFlood flood-opacity=\"0\" result=\"BackgroundImageFix\"/>\n//       <feColorMatrix in=\"SourceAlpha\" type=\"matrix\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\" result=\"hardAlpha\"/>\n//       <feOffset dy=\"4\"/>\n//       <feGaussianBlur stdDeviation=\"2\"/>\n//       <feComposite in2=\"hardAlpha\" operator=\"out\"/>\n//       <feColorMatrix type=\"matrix\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0\"/>\n//       <feBlend mode=\"normal\" in2=\"BackgroundImageFix\" result=\"effect1_dropShadow_104_67\"/>\n//       <feBlend mode=\"normal\" in=\"SourceGraphic\" in2=\"effect1_dropShadow_104_67\" result=\"shape\"/>\n//     </filter>\n//         </defs>\n//       </svg>\n//     );\n//   };\n\n// export default Dail;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Dail\");\n$RefreshReg$(_c2, \"Arch\");\n$RefreshReg$(_c3, \"Ellipse\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Dail","currentTemp","setTemp","_s","count","setCount","increaseTemp","decreaseTemp","ChangeTempButton","isIncrease","onClick","textStyles","margin","color","style","width","height","borderRadius","border","display","justifyContent","alignItems","backgroundColor","children","fileName","_jsxFileName","lineNumber","columnNumber","paddingBottom","flexDirection","Ellipse","fill","radius","Math","PI","strokeWidth","_c","Arch","strokeColor","startAngle","endAngle","startX","cos","startY","sin","endX","endY","pathData","d","stroke","strokeLinecap","_c2","circumferenceCurr","circumferenceSet","xmlns","viewBox","transform","filter","x","y","fontSize","id","filterUnits","result","in","type","values","dy","stdDeviation","in2","operator","mode","_c3","$RefreshReg$"],"sources":["/Users/kanachiweli/Capstone Website/frontend/src/Components/Dial.tsx"],"sourcesContent":["\nimport React, { FC , useState} from 'react';\nimport {dynamicStyles} from './ControlButton';\nimport { text } from 'stream/consumers';\nimport { hover } from '@testing-library/user-event/dist/hover';\n\ntype DailProps = {\n  currentTemp: number;\n  setTemp: number \n};\n\nconst Dail: React.FC<DailProps> = ({ currentTemp, setTemp }) => {\n    // State to hold the current count\n  const [count, setCount] = useState(setTemp);\n\n  // Function to handle button click and update count\n  const increaseTemp = () => {\n    setCount(count + 1);\n  };\n  const decreaseTemp = () => {\n    setCount(count - 1);\n  };\n\nconst ChangeTempButton: React.FC<{ isIncrease: boolean; onClick: () => void }> = ({ isIncrease, onClick }) => {\n    const textStyles: React.CSSProperties = {\n        margin:0,\n        color:'rgb(49, 91, 15)'\n      };\n  \n    return (\n      <button onClick={onClick} style={\n        { width: '4.7vh',\n        height: '4.7vh',\n        borderRadius: '50%',\n        border:'none',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center', \n        backgroundColor: 'rgb(49, 91, 15)' }}>\n        {isIncrease ? (\n          <h1 style={textStyles}>+</h1>\n        ) : (\n          <h1 style={textStyles}>-</h1>\n        )}\n      </button>\n    );\n  };\n  \n  \n  return (\n\n    <div style={{paddingBottom:'30px', display:'flex', flexDirection:'row'}}>\n    <ChangeTempButton isIncrease = {true} onClick={increaseTemp}/> \n    <Ellipse currentTemp={currentTemp} fill='#315B0F' setTemp={count} radius={250 / (2 * Math.PI)} strokeWidth={5} />\n    <ChangeTempButton isIncrease = {false} onClick={decreaseTemp}/> \n\n    </div>\n  );\n};\n\n\n\ninterface EllipseProps {\n  currentTemp: number;\n  fill: string;\n  radius: number;\n  strokeWidth: number;\n  setTemp: number;\n}\n\ninterface ArchProps {\n  radius: number;\n  strokeWidth: number;\n  strokeColor: string;\n  startAngle: number;\n  endAngle: number;\n}\n\nconst Arch: FC<ArchProps> = ({ radius, strokeWidth, strokeColor, startAngle, endAngle }) => {\n    const startX = radius * Math.cos((startAngle * Math.PI) / 180);\n    const startY = radius * Math.sin((startAngle * Math.PI) / 180);\n    const endX = radius * Math.cos((endAngle * Math.PI) / 180);\n    const endY = radius * Math.sin((endAngle * Math.PI) / 180);\n  // Create the path data for the full circle\n  const pathData = `M ${startX} ${startY} A ${radius} ${radius} 0 1 1 ${endX} ${endY}`;\n\n  return <path d={pathData} fill=\"none\" stroke={strokeColor} strokeWidth={strokeWidth} strokeLinecap=\"round\" />;\n};\n\nconst Ellipse: FC<EllipseProps> = ({ currentTemp, radius, fill, strokeWidth, setTemp }) => {\n  const circumferenceCurr = ((currentTemp+10) / 100) * 360;\n  const circumferenceSet = ((setTemp+10) / 100) * 360;\n\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width={radius * 2 * Math.PI} height={radius * 2 * Math.PI} viewBox={`0 0 ${radius * 2} ${radius * 2}`} fill=\"none\">\n      {/* Group with filter */}\n      <g transform={`translate(${radius}, ${radius})`} filter={`url(#filter0_d_${radius}_${circumferenceCurr}_layer1)`}>\n        {/* Ellipse for the first shape in Layer 1 */}\n        <Arch radius={radius - (strokeWidth+1)} startAngle={0} endAngle={360} strokeColor={'#F4FFEB'} strokeWidth={strokeWidth} />\n        <Arch radius={(radius-strokeWidth) - (strokeWidth+1)} startAngle={0} endAngle={360} strokeColor={'#F4FFEB'} strokeWidth={strokeWidth} />\n        <Arch radius={radius - (strokeWidth+1)} startAngle={45} endAngle={circumferenceCurr+44 } strokeColor={fill} strokeWidth={strokeWidth} />\n        <Arch radius={(radius-strokeWidth) - (strokeWidth+1)} startAngle={45} endAngle={circumferenceSet+44 } strokeColor={'#66B12A'} strokeWidth={strokeWidth} />\n        <text x={-radius * 1 / 2} y={radius * 1 / 12} fontSize=\"16\" fill=\"#122701\">\n          {`${currentTemp} °F`}\n        </text>\n        <text x={-radius * 1 / 3} y={radius * 4 / 12} fontSize=\"4\" fill=\"#122701\">\n          {`Set To: ${setTemp}°F `}\n        </text>\n      </g>\n      {/* Definitions */}\n      <defs>\n     \n    <filter id=\"filter0_d_104_67\" x=\"0.5\" y=\"0\" width=\"258\" height=\"258\" filterUnits=\"userSpaceOnUse\" color-interpolation-filters=\"sRGB\">\n      <feFlood flood-opacity=\"0\" result=\"BackgroundImageFix\"/>\n      <feColorMatrix in=\"SourceAlpha\" type=\"matrix\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\" result=\"hardAlpha\"/>\n      <feOffset dy=\"4\"/>\n      <feGaussianBlur stdDeviation=\"2\"/>\n      <feComposite in2=\"hardAlpha\" operator=\"out\"/>\n      <feColorMatrix type=\"matrix\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0\"/>\n      <feBlend mode=\"normal\" in2=\"BackgroundImageFix\" result=\"effect1_dropShadow_104_67\"/>\n      <feBlend mode=\"normal\" in=\"SourceGraphic\" in2=\"effect1_dropShadow_104_67\" result=\"shape\"/>\n    </filter>\n  </defs>\n    </svg>\n  );\n};\n\nexport default Dail;\n// const Ellipse: FC<EllipseProps> = ({ currentTemp, radius, fill, strokeWidth, setTemp }) => {\n//   const circumference = ((currentTemp+10) / 100) * 360;\n\n//   return (\n//     <svg xmlns=\"http://www.w3.org/2000/svg\" width={radius * 2 * Math.PI} height={radius * 2 * Math.PI} viewBox={`0 0 ${radius * 2} ${radius * 2}`} fill=\"none\">\n//       {/* Group with filter */}\n//       <g transform={`translate(${radius}, ${radius})`} filter={`url(#filter0_d_${radius}_${circumference}_layer1)`}>\n//         {/* Ellipse for the first shape in Layer 1 */}\n//         <Arch radius={radius - (strokeWidth+1)} startAngle={0} endAngle={360} strokeColor={'#F4FFEB'} strokeWidth={strokeWidth} />\n//         <Arch radius={radius - (strokeWidth+1)} startAngle={45} endAngle={circumference+44 } strokeColor={fill} strokeWidth={strokeWidth} />\n//         <text x={-radius * 1 / 2} y={radius * 1 / 12} fontSize=\"16\" fill=\"#122701\">\n//           {`${currentTemp} °F`}\n//         </text>\n//         <text x={-radius * 1 / 3} y={radius * 4 / 12} fontSize=\"4\" fill=\"#122701\">\n//           {`Set To: ${setTemp}°F `}\n//         </text>\n//       </g>\n//       {/* Definitions */}\n//       <defs>\n     \n   \n//   </defs>\n//     </svg>\n//   );\n// };\n\n// const Ellipse: FC<EllipseProps> = ({ currentTemp, radius, fill, strokeWidth, setTemp }) => {\n//     const [rotation, setRotation] = useState(315);\n  \n//     const handleRotation = (event: React.MouseEvent<SVGSVGElement>) => {\n//         // Calculate the angle of rotation based on user interaction\n//         const boundingBox = event.currentTarget.getBoundingClientRect();\n//         const centerX = boundingBox.width / 2;\n//         const centerY = boundingBox.height / 2;\n//         let angle = Math.atan2(event.clientY - centerY, event.clientX - centerX) * (180 / Math.PI);\n      \n      \n//         // Update the rotation state\n//         setRotation(angle);\n//         console.log(rotation);\n//       };\n//     const circumference = rotation;\n    \n//     return (\n//       <svg\n//         xmlns=\"http://www.w3.org/2000/svg\"\n//         width={radius * 2 * Math.PI}\n//         height={radius * 2 * Math.PI}\n//         viewBox={`0 0 ${radius * 2} ${radius * 2}`}\n//         fill=\"none\"\n//         onMouseMove={handleRotation}\n        \n//       >\n//         {/* Group with filter and rotation */}\n//         <g\n//           transform={`translate(${radius}, ${radius})`}\n//           filter={`url(#filter0_d_${radius}_360_layer1)`}\n//         >\n//           {/* Ellipse for the first shape in Layer 1 */}\n//           <Arch radius={radius - (strokeWidth + 1)} startAngle={0} endAngle={360} strokeColor={'#F4FFEB'} strokeWidth={strokeWidth} />\n//           <Arch\n//             radius={radius - (strokeWidth + 1)}\n//             startAngle={45}\n//             endAngle={circumference + 44}\n//             strokeColor={fill}\n//             strokeWidth={strokeWidth}\n//           />\n//           <text x={-radius * 1 / 2} y={radius * 1 / 12} fontSize=\"16\" fill=\"#122701\">\n//             {`${Math.round(((circumference-45)/360)*100 )} °F`}\n//           </text>\n//           <text x={-radius * 1 / 3} y={radius * 4 / 12} fontSize=\"4\" fill=\"#122701\">\n//             {`Set To: ${setTemp}°F `}\n//           </text>\n//         </g>\n//         {/* Definitions */}\n//         <defs>\n//         <filter id=\"filter0_d_104_67\" x=\"0.5\" y=\"0\" width=\"258\" height=\"258\" filterUnits=\"userSpaceOnUse\" color-interpolation-filters=\"sRGB\">\n//       <feFlood flood-opacity=\"0\" result=\"BackgroundImageFix\"/>\n//       <feColorMatrix in=\"SourceAlpha\" type=\"matrix\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\" result=\"hardAlpha\"/>\n//       <feOffset dy=\"4\"/>\n//       <feGaussianBlur stdDeviation=\"2\"/>\n//       <feComposite in2=\"hardAlpha\" operator=\"out\"/>\n//       <feColorMatrix type=\"matrix\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0\"/>\n//       <feBlend mode=\"normal\" in2=\"BackgroundImageFix\" result=\"effect1_dropShadow_104_67\"/>\n//       <feBlend mode=\"normal\" in=\"SourceGraphic\" in2=\"effect1_dropShadow_104_67\" result=\"shape\"/>\n//     </filter>\n//         </defs>\n//       </svg>\n//     );\n//   };\n  \n// export default Dail;"],"mappings":"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EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEV,CAAC;AAAC6C,GAAA,GApCI1C,OAAyB;AAsC/B,eAAe9B,IAAI;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAoC,EAAA,EAAAe,GAAA,EAAAqB,GAAA;AAAAC,YAAA,CAAArC,EAAA;AAAAqC,YAAA,CAAAtB,GAAA;AAAAsB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}