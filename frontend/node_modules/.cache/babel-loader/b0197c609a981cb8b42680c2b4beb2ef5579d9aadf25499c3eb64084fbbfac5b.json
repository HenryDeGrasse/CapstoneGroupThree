{"ast":null,"code":"var _jsxFileName = \"/Users/kanachiweli/Capstone Website/frontend/src/Components/ControlButton.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToggleIcon = () => {\n  _s();\n  const [isIconVisible, setIsIconVisible] = useState(false);\n  const handleToggle = () => {\n    setIsIconVisible(!isIconVisible);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleToggle,\n      children: isIconVisible ? 'Hide Icon' : 'Show Icon'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this), isIconVisible && /*#__PURE__*/_jsxDEV(YourIconComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 7\n  }, this);\n};\n\n//   const YourIconComponent = () => (\n//     // Replace this with your actual icon component or JSX\n//     <div>Icon</div>\n//   );\n_s(ToggleIcon, \"jEDthHjWwuyvFLoW6qmiQrbsYig=\");\n_c = ToggleIcon;\nconst ControlButton = ({\n  iconTitle,\n  iconLink\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_c2 = ControlButton;\nexport default ControlButton;\nvar _c, _c2;\n$RefreshReg$(_c, \"ToggleIcon\");\n$RefreshReg$(_c2, \"ControlButton\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ToggleIcon","_s","isIconVisible","setIsIconVisible","useState","handleToggle","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","YourIconComponent","_c","ControlButton","iconTitle","iconLink","_c2","$RefreshReg$"],"sources":["/Users/kanachiweli/Capstone Website/frontend/src/Components/ControlButton.tsx"],"sourcesContent":["import React from 'react';\ntype ControlButtonsProps = {\n   iconLink: string \n   iconTitle: string \n};\n\nconst ToggleIcon = () => {\n    const [isIconVisible, setIsIconVisible] = useState(false);\n  \n    const handleToggle = () => {\n      setIsIconVisible(!isIconVisible);\n    };\n  \n    return (\n      <div>\n        <button onClick={handleToggle}>\n          {isIconVisible ? 'Hide Icon' : 'Show Icon'}\n        </button>\n        {isIconVisible && <YourIconComponent />}\n      </div>\n    );\n  };\n  \n//   const YourIconComponent = () => (\n//     // Replace this with your actual icon component or JSX\n//     <div>Icon</div>\n//   );\nconst ControlButton: React.FC<ControlButtonsProps> = ({iconTitle, iconLink }) => {\n    return(\n        <button>\n\n        </button>\n    )\n}\nexport default ControlButton"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAM1B,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGC,QAAQ,CAAC,KAAK,CAAC;EAEzD,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzBF,gBAAgB,CAAC,CAACD,aAAa,CAAC;EAClC,CAAC;EAED,oBACEH,OAAA;IAAAO,QAAA,gBACEP,OAAA;MAAQQ,OAAO,EAAEF,YAAa;MAAAC,QAAA,EAC3BJ,aAAa,GAAG,WAAW,GAAG;IAAW;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC,EACRT,aAAa,iBAAIH,OAAA,CAACa,iBAAiB;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpC,CAAC;AAEV,CAAC;;AAEH;AACA;AACA;AACA;AAAAV,EAAA,CApBMD,UAAU;AAAAa,EAAA,GAAVb,UAAU;AAqBhB,MAAMc,aAA4C,GAAGA,CAAC;EAACC,SAAS;EAAEC;AAAS,CAAC,KAAK;EAC7E,oBACIjB,OAAA;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEQ,CAAC;AAEjB,CAAC;AAAAM,GAAA,GANKH,aAA4C;AAOlD,eAAeA,aAAa;AAAA,IAAAD,EAAA,EAAAI,GAAA;AAAAC,YAAA,CAAAL,EAAA;AAAAK,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}